package com.honegroupp.familyRegister.model

import com.google.firebase.database.DataSnapshot
import com.google.firebase.database.PropertyName
import com.honegroupp.familyRegister.backend.FirebaseDatabaseManager

/**
 * This class is responsible for storing data and business logic for Family
 *
 * @param familyId is the id of the family, this is generated by FirebaseAuthetication.
 * @param familyOwnerUID is the UID of the owner of this family
 * @param members is an ArrayList of UIDs of the member of the familyK
 *
 * @author Tianyi Mo
 * */

data class Family(
    @set:PropertyName("familyName")
    @get:PropertyName("familyName")
    var familyName: String = "",
    @set:PropertyName("password")
    @get:PropertyName("password")
    var password: String = "",
    @set:PropertyName("familyOwnerUID")
    @get:PropertyName("familyOwnerUID")
    var familyOwnerUID: String = "",
    @set:PropertyName("familyId")
    @get:PropertyName("familyId")
    var familyId: String = "",
    @set:PropertyName("members")
    @get:PropertyName("members")
    var members: ArrayList<String> = ArrayList()
) {
    /*This constructor has no parameter, which is used to create CategoryUpload while retrieve data from database*/
    constructor() : this("","", "", "", ArrayList())

    /**
     * This method is responsible for storing Family to the database.
     *
     * */
    fun store(){

        FirebaseDatabaseManager.uploadFamily(this)

        FirebaseDatabaseManager.retrieve("", callback_add_family_to_user)
    }

    fun callback_add_family_to_user(dataSnapshot: DataSnapshot): Void{
        val owner = dataSnapshot.child("").getValue(User::class.java) as User
        //user =
        // set family id
        // upload user
    }
}